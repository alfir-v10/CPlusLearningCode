1.c
Сумматор.
Напишите функцию с именем sum, которая вычисляет сумму двух, переданных в неё целочисленных аргументов.
Входные данные:
	Два целых числа.
Выходные данные:
	Одно целое число, сумма чисел поступивших на вход

2.c
Минимум
Опишите функцию с именем min, которая вычисляет минимальное из двух чисел, переданных в неё.
Входные данные:
	Два целых числа.
Выходные данные:
	Одно целое число - минимум из чисел, переданных в функцию.

3.c
Минимум-2.
Напишите программу, которая будет вычислять и возвращать минимальное из трёх чисел, 
переданных в неё, при помощи функции min.
Входные данные:
	Три целых числа.
Выходные данные:
	Одно целое число - минимум из чисел, переданных в функцию.

4.c
Факториал.
Напишите функцию с именем factorial, которая вычисляет факториал числа, 
переданного ей в качестве аргумента.
Входные данные:
	Одно целое неотрицательное число N, (N<13).
Выходные данные:
	Одно целое число, факториал исходного числа.
5.c
Число сочетаний.
Допустим, у вас имеется N хоккеистов. Из них нужно сформировать команду из K человек. 
Сколько существует вариантов это сделать?
Входные данные:
	Натуральное число N и целое неотрицательное число K,(K<N),N<12.
Выходные данные:
	Одно число - количество сочетаний хоккеистов.

6.c
Последовательные множители.
Напишите функцию с именем sequence_multipliers, принимающую один аргумент x, 
которая определяет можно ли представить x в виде произведения трех последовательных натуральных чисел. 
Например, 120=4⋅5⋅6
Входные данные:
	Одно натуральное число N, (N < 1000000).
Выходные данные:
	k - первое число последовательности трёх натуральных чисел такое, что k(k+1)(k+2) = x, либо -1, 
	если число x нельзя представить в таком виде.
7.c
Квадрат.
Напишите функцию с именем square(n,c), которая выводит на экран квадрат размера n на n, заполненный символами c.
Входные данные:
	Одно целое число и символ заполнитель.
Выходные данные:
	Квадрат из символов, указанного формата.

8.c
Форматирование даты
Написать функцию print_date(int d, int m, int y, int k), которая выводит дату в одном из указанных форматов.
при k = 0: dd.mm.yy
при k = 1: dd.mm.yyyy
при k = 2: yyyy/mm/dd
Входные данные:
Четыре числа:
	первое число -- номер дня в месяце ,
	второе число -- номер месяца,
	третье число -- год,
	четвёртое число -- формат.
Выходные данные:
	Дата в указанном формате.
9.c
Помогите Гиллу Байтсу исправить ошибки в программе.
Задача состояла в том, чтобы написать функцию выводящую все делители числа K, поступившего на вход.

10.c
Переделайте функцию, написанную в прошлом уроке, таким образом, чтобы она возвращала число 1, 
если число K простое, или 0, если число K составное.

11.c
В программе имеются две целочисленные переменные a и b. Объявите два указателя с именами p_a и p_b,
которые ссылаются соответствующие переменные.
Здесь и далее напишите именно то, что указано в задании, не используя include, main и т.п.

12.c
В программе имеется символьная переменные ch и inp. Объявите  указатель с именем p_ch, 
который ссылается на переменную ch, и присвойте ей значение переменной inp.

13.c
В программе объявлены две переменные целого типа. На каждую из них ссылается указатель. 
На первую ссылается указатель p_1, а на вторую указатель p_2.
Используя указатели, вывести значения этих переменных через пробел. Сначала вторую, потом первую.
Чтобы получить значение переменной, на которую ссылается указатель, необходимо произвести разыменование указателя.

14.c
Даны два указателя по тем же правилам, что и в пред. задаче.
Выведите сумму переменных, на которые ссылаются данные указатели.

15.c
В программе объявлены два указателя p_1 и p_2, которые ссылаются на некоторые переменные. 
Присвойте переменной на которую ссылается указатель p_1, значение переменной c, 
а переменной, на которую ссылается указатель p_2, значение переменной d.

16.c
Гилл Байтс написал программу, которая меняет значения двух целочисленных переменных местами. 
При этом, он поспорил со своим другом Стэном Добсом, что сможет сделать это, используя лишь 
указатели на данные переменные и дополнительную переменную temp.
Помогите Гиллу выиграть спор. Исправьте следующую программу соответствующим образом.

17.c
В программе объявлены три целочисленные переменные и указатели на них. 
Используя лишь указатели, найти среди переменных переменную с минимальным значением. 
Затем остальным переменным присвоить это значение.

18.c
Написать функцию void swap(int * x, int * y), которая меняет значения переменных местами.

19.c
Написать функцию void sum_digits(int * x), которая заменяет число x на сумму цифр из которых состоит число x.

20.c
Написать функцию void minmax(int * x, int * y), записывающую в переменную x минимальное из значений x и y, 
а в переменную y -- максимальное из этих значений.

21.c
Написать функцию void char_register(char * ch, int fl), которая переводит переданный ей символ ch 
(символ латинского алфавита) в заданный переменной fl регистр: 0 — нижний, 1 — верхний.
Если переданное в переменной ch значение не является символом латинского алфавита, то делать с ним ничего не нужно.
Преобразованный символ необходимо поместить по тому же указателю, по которому он был считан. 
Выводить символ на печать не требуется.

22.c
Шифр Цезаря.
Написать функцию void char_cesar(char * ch, int shift), которая изменяет переданный ей символ ch 
по алгоритму Цезаря с ключом shift. Шифр Цезаря заключается в замене текущего символа на тот, который 
находится в алфавите на k позиций правее. Например, буква a при сдвиге 2 будет заменена на букву c, 
буква x при сдвиге 4 будет заменена на букву b, т.к. мы считаем алфавит зацикленным.

23.c
Написать функцию int gcd(int x, int y), которая ищет наибольший общий делитель для чисел x и y.

24.c
Написать функцию void reduce_fraction(int * a, int * b), которая будет сокращать дробь 
c числителем a и знаменателем b. Используйте функцию gcd, написанную на прошлом шаге.

25.c
Напишите функцию int abs_arr(int arr[], int n), которая заменяет отрицательные элементы массива их модулями. 
Кроме того, функция должна возвращать количество произведенных замен.

26.c
Напишите функцию int minmax(int arr[], int n, int fl), которая возвращает максимальный или 
минимальный элемент массива arr, в зависимости от значения флага fl. 0 - минимум, 1 - максимум.

27.c
Написать функцию void sort_arr(int arr[], int n, int fl), которая сортирует переданный ей массив по возрастанию или убыванию, 
в зависимости от значения флага fl: 0 -- от меньшего к большему, 1 -- от большего к меньшему.

Самый простой способ отсортировать массив, например, от меньшего к большему, это найти минимальный элемент 
и обменять его местами с первым элементом массива. Затем снова найти минимальный элемент, но уже не учитывать первый элемент.
Т.е. искать минимум среди элементов со второго и до конца. Найденный элемент обменять местами со вторым элементом массива. 
Продолжать так до тех пор, пока массив не кончится.

28.c
Напишите функцию int linear_search(int arr[], int n, int arg), которая находит позицию первого вхождения 
элемента со значением arg в массиве arr. Если такой элемент не найден, то функция должна возвращать значение -1.

29.c
Помогите Гиллу Байтсу исправить написанную им функцию int binary_search(int arr[], int n, int arg). 
Функция должна находить порядковый номер элемента со значением arg в отсортированном по возрастанию массиве arr. 
Если такой элемент не найден, то функция должна возвращать значение -1.
